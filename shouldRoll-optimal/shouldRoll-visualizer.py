# -*- coding: utf-8 -*-
"""Draft.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sKzk8CMbiublFTbJ_r64hHhAYSGnqvRg
"""

"""## Visualize GRO"""

import matplotlib.pyplot as plt
from matplotlib.colors import LinearSegmentedColormap
from matplotlib.patches import Patch
import numpy as np
import pandas as pd

def visualize_shouldRoll(filename, p, k, o):
  trim_size = 100
  fig_size = 50

  df = pd.read_csv(f'{filename}.txt')
  df = df.iloc[:trim_size, :trim_size]
  print(df.shape)
  arr = df.to_numpy()

  plt.style.use('classic')
  plt.figure(figsize=(fig_size, fig_size))
  colors = ['dodgerblue', 'crimson']

  ax = plt.gca()
  plt.pcolormesh(arr, edgecolors='w', linewidth=1, cmap=LinearSegmentedColormap.from_list('', colors))
  ax.set_aspect('equal')

  legend_elements = [Patch(facecolor=color, edgecolor='w') for color in colors]
  ax.legend(handles=legend_elements,
            labels=['Hold', 'Roll'],
            loc='upper left',
            bbox_to_anchor=[1.02, 1])
  plt.title(f'Result of should roll given player {p}, turntotal = {k}, ones rolled = {o}')
  plt.xlabel("Opponent's score")
  plt.ylabel("Player's score")
  plt.xticks(np.arange(0, trim_size, 5))
  plt.yticks(np.arange(0, trim_size, 5))
  plt.savefig(f'{filename}_p{p}-k{k}-o{o}.png')
  plt.show()

if __name__ == '__main__':
  p, k, o = 1, 20, 2
  filename = 'z'

  visualize_shouldRoll(filename, p, k, o)